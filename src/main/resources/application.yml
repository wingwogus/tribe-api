spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      database: ${REDIS_DB}

  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    show-sql: true

    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true


  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_KEY}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 1800000

jwt:
  secret: ${JWT_SECRET}

google:
  maps:
    key: ${GOOGLE_KEY}

gemini:
  api:
    key: ${GEMINI_API_KEY} # 환경변수에서 API 키를 가져옵니다.
    url: "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"

server:
  port: 8083

app:
  oauth:
    redirect-url: http://localhost:8081/oauth/callback

